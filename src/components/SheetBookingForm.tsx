import { useState } from 'react'
import { type SheetBooking } from '@/lib/googleSheets'

interface BookingFormProps {
  existingBooking?: SheetBooking
  onSubmit: (data: SheetBooking) => void
  onClose: () => void
  onDelete?: (orderNumber: number) => void
}

export default function SheetBookingForm({ 
  existingBooking, 
  onSubmit, 
  onClose,
  onDelete
}: BookingFormProps) {
  const [formData, setFormData] = useState({
    orderNumber: existingBooking?.orderNumber || 0,
    guestName: existingBooking?.guestName || '',
    partySize: existingBooking?.partySize || 8,
    paymentStatus: existingBooking?.paymentStatus || '',
    tableNumbers: existingBooking?.tableNumbers || '',
    receiver: existingBooking?.receiver || '',
    paymentDate: existingBooking?.paymentDate || '',
    phoneNumber: existingBooking?.phoneNumber || ''
  })

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!formData.guestName.trim()) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•')
      return
    }

    if (!formData.tableNumbers.trim()) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞')
      return
    }

    onSubmit({
      orderNumber: formData.orderNumber,
      guestName: formData.guestName.trim(),
      partySize: formData.partySize,
      paymentStatus: formData.paymentStatus.trim(),
      tableNumbers: formData.tableNumbers.trim(),
      receiver: formData.receiver.trim(),
      paymentDate: formData.paymentDate.trim(),
      phoneNumber: formData.phoneNumber.trim()
    })
  }

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg p-4 sm:p-6 w-full max-w-lg max-h-[90vh] overflow-y-auto">
        <h3 className="text-lg sm:text-xl font-bold mb-4 text-gray-800">
          {existingBooking ? '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà'}
        </h3>
        
        <form onSubmit={handleSubmit} className="space-y-4">
          {/* ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• */}
          <div>
            <label className="block text-sm font-medium mb-1 text-gray-700">
              ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• *
            </label>
            <input
              type="text"
              value={formData.guestName}
              onChange={(e) => setFormData(prev => ({ ...prev, guestName: e.target.value }))}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-800"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ"
              required
            />
          </div>

          {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô */}
          <div>
            <label className="block text-sm font-medium mb-1 text-gray-700">
              ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô
            </label>
            <input
              type="number"
              min="1"
              max="50"
              value={formData.partySize}
              onChange={(e) => setFormData(prev => ({ ...prev, partySize: parseInt(e.target.value) }))}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-800"
            />
          </div>

          {/* ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
          <div>
            <label className="block text-sm font-medium mb-1 text-gray-700">
              ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô *
            </label>
            <select
              value={formData.paymentStatus}
              onChange={(e) => setFormData(prev => ({ ...prev, paymentStatus: e.target.value }))}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-800"
            >
              <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ --</option>
              <option value="‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß">‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß</option>
              <option value="‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß">‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß</option>
              <option value="‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß">‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß</option>
              <option value="‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞">‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞</option>
              <option value="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</option>
            </select>
          </div>

          {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞ */}
          <div>
            <label className="block text-sm font-medium mb-1 text-gray-700">
              ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞ *
            </label>
            <input
              type="text"
              value={formData.tableNumbers}
              onChange={(e) => setFormData(prev => ({ ...prev, tableNumbers: e.target.value }))}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-800"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô 5,6,7 ‡∏´‡∏£‡∏∑‡∏≠ 12"
              required
            />
            <div className="text-xs text-gray-500 mt-1">
              üí° ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡πÇ‡∏ï‡πä‡∏∞ ‡πÉ‡∏´‡πâ‡πÅ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏∏‡∏•‡∏†‡∏≤‡∏Ñ ‡πÄ‡∏ä‡πà‡∏ô 5,6,7
            </div>
          </div>

          {/* ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô */}
          <div>
            <label className="block text-sm font-medium mb-1 text-gray-700">
              ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô
            </label>
            <input
              type="text"
              value={formData.receiver}
              onChange={(e) => setFormData(prev => ({ ...prev, receiver: e.target.value }))}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-800"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡∏£‡∏£, ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏´‡∏°‡∏≤‡∏¢"
            />
          </div>

          {/* ‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡πà‡∏≤‡∏¢ */}
          <div>
            <label className="block text-sm font-medium mb-1 text-gray-700">
              ‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡πà‡∏≤‡∏¢
            </label>
            <input
              type="text"
              value={formData.paymentDate}
              onChange={(e) => setFormData(prev => ({ ...prev, paymentDate: e.target.value }))}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-800"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô 01/08/2025 10:30"
            />
            <div className="text-xs text-gray-500 mt-1">
              üí° ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: ‡∏ß‡∏±‡∏ô/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:‡∏ô‡∏≤‡∏ó‡∏µ
            </div>
          </div>

          {/* ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ */}
          <div>
            <label className="block text-sm font-medium mb-1 text-gray-700">
              ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå
            </label>
            <input
              type="tel"
              value={formData.phoneNumber}
              onChange={(e) => setFormData(prev => ({ ...prev, phoneNumber: e.target.value }))}
              className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 text-gray-800"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô 081-234-5678"
            />
          </div>
          
          <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 pt-4">
            <button
              type="button"
              onClick={onClose}
              className="flex-1 bg-gray-500 text-white py-2 rounded-lg hover:bg-gray-600 transition-colors text-sm sm:text-base"
            >
              ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </button>
            {existingBooking && onDelete && (
              <button
                type="button"
                onClick={() => {
                  if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                    onDelete(existingBooking.orderNumber)
                    onClose()
                  }
                }}
                className="flex-1 bg-red-600 text-white py-2 rounded-lg hover:bg-red-700 transition-colors text-sm sm:text-base"
              >
                ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </button>
            )}
            <button
              type="submit"
              className="flex-1 bg-purple-600 text-white py-2 rounded-lg hover:bg-purple-700 transition-colors text-sm sm:text-base"
            >
              {existingBooking ? '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}
            </button>
          </div>
        </form>
      </div>
    </div>
  )
}
